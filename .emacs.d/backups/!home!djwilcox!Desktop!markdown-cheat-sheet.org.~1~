* Cheat sheet
  :PROPERTIES:
  :CUSTOM_ID: cheat-sheet
  :END:

** Pandoc's markdown
   :PROPERTIES:
   :CUSTOM_ID: pandocs-markdown
   :END:

*** Paragraphs
    :PROPERTIES:
    :CUSTOM_ID: paragraphs
    :END:

A paragraph is one or more lines of text followed by one or more blank
lines. Newlines are treated as spaces, so you can reflow your paragraphs
as you like. If you need a hard line break, put two or more spaces at
the end of a line.

*** Headers
    :PROPERTIES:
    :CUSTOM_ID: headers
    :END:

There are two kinds of headers, Setext and atx.

**** Setext-style headers
     :PROPERTIES:
     :CUSTOM_ID: setext-style-headers
     :END:

A setext-style header is a line of text “underlined” with a row of =
signs (for a level one header) or - signs (for a level two header):

#+BEGIN_EXAMPLE
    A level-one header
    ==================
#+END_EXAMPLE

* A level-one header
  :PROPERTIES:
  :CUSTOM_ID: a-level-one-header
  :END:

#+BEGIN_EXAMPLE
    A level-two header
    ------------------
#+END_EXAMPLE

** A level-two header
   :PROPERTIES:
   :CUSTOM_ID: a-level-two-header
   :END:

**** Atx-style headers
     :PROPERTIES:
     :CUSTOM_ID: atx-style-headers
     :END:

An Atx-style header consists of one to six # signs and a line of text,
optionally followed by any number of # signs. The number of # signs at
the beginning of the line is the header level:

#+BEGIN_EXAMPLE
    # A level-one header
#+END_EXAMPLE

* A level-one header
  :PROPERTIES:
  :CUSTOM_ID: a-level-one-header-1
  :END:

#+BEGIN_EXAMPLE
    ## A level-two header 
#+END_EXAMPLE

** A level-two header
   :PROPERTIES:
   :CUSTOM_ID: a-level-two-header-1
   :END:

As with setext-style headers, the header text can contain formatting:

#+BEGIN_EXAMPLE
    # A level-one header with a [link](/url) and *emphasis*
#+END_EXAMPLE

* A level-one header with a [[/url][link]] and /emphasis/
  :PROPERTIES:
  :CUSTOM_ID: a-level-one-header-with-a-link-and-emphasis
  :END:

*** Block quotations
    :PROPERTIES:
    :CUSTOM_ID: block-quotations
    :END:

Markdown uses email conventions for quoting blocks of text. A block
quotation is one or more paragraphs or other block elements (such as
lists or headers), with each line preceded by a > character and a space.
(The > need not start at the left margin, but it should not be indented
more than three spaces.)

#+BEGIN_EXAMPLE
    > This is a block quote. This
    > paragraph has two lines.
    >
    > 1. This is a list inside a block quote.
    > 2. Second item.
        
#+END_EXAMPLE

#+BEGIN_QUOTE
  This is a block quote. This paragraph has two lines.

  1. This is a list inside a block quote.
  2. Second item.
#+END_QUOTE

A “lazy” form, which requires the > character only on the first line of
each block, is also allowed:

#+BEGIN_EXAMPLE
    > This is a block quote. This
    paragraph has two lines.

    > 1. This is a list inside a block quote.
    2. Second item.
#+END_EXAMPLE

#+BEGIN_QUOTE
  This is a block quote. This paragraph has two lines.
#+END_QUOTE

#+BEGIN_QUOTE

  1. This is a list inside a block quote.
  2. Second item.
#+END_QUOTE

Among the block elements that can be contained in a block quote are
other block quotes. That is, block quotes can be nested:

#+BEGIN_EXAMPLE
    > This is a block quote.
    >
    > > A block quote within a block quote.
#+END_EXAMPLE

#+BEGIN_QUOTE
  This is a block quote.

  #+BEGIN_QUOTE
    A block quote within a block quote.
  #+END_QUOTE
#+END_QUOTE

*** Verbatim (code) blocks
    :PROPERTIES:
    :CUSTOM_ID: verbatim-code-blocks
    :END:

**** Indented code blocks
     :PROPERTIES:
     :CUSTOM_ID: indented-code-blocks
     :END:

A block of text indented four spaces (or one tab) is treated as verbatim
text: that is, special characters do not trigger special formatting, and
all spaces and line breaks are preserved. For example,

#+BEGIN_EXAMPLE
    if (a > 3) {
           moveShip(5 * gravity, DOWN);
                 }
#+END_EXAMPLE

The initial (four space or one tab) indentation is not considered part
of the verbatim text, and is removed in the output.

Note: blank lines in the verbatim text need not begin with four spaces.

*** Line blocks
    :PROPERTIES:
    :CUSTOM_ID: line-blocks
    :END:

A line block is a sequence of lines beginning with a vertical bar (|)
followed by a space. The division into lines will be preserved in the
output, as will any leading spaces; otherwise, the lines will be
formatted as markdown. This is useful for verse and addresses:

#+BEGIN_EXAMPLE
    | The limerick packs laughs anatomical
    | In space that is quite economical.
    |    But the good ones I've seen
    |    So seldom are clean
    | And the clean ones so seldom are comical

    | 200 Main St.
    | Berkeley, CA 94718
#+END_EXAMPLE

The limerick packs laughs anatomical\\
In space that is quite economical.\\
   But the good ones I've seen\\
   So seldom are clean\\
And the clean ones so seldom are comical

200 Main St.\\
Berkeley, CA 94718

The lines can be hard-wrapped if needed, but the continuation line must
begin with a space.

#+BEGIN_EXAMPLE
    | The Right Honorable Most Venerable and Righteous Samuel L.
      Constable, Jr.
    | 200 Main St.
    | Berkeley, CA 94718
#+END_EXAMPLE

The Right Honorable Most Venerable and Righteous Samuel L. Constable,
Jr.\\
200 Main St.\\
Berkeley, CA 94718

*** Lists
    :PROPERTIES:
    :CUSTOM_ID: lists
    :END:

**** Bullet lists
     :PROPERTIES:
     :CUSTOM_ID: bullet-lists
     :END:

A bullet list is a list of bulleted list items. A bulleted list item
begins with a bullet (*, +, or -). Here is a simple example:

#+BEGIN_EXAMPLE
    * one
    * two
    * three
#+END_EXAMPLE

-  one
-  two
-  three

This will produce a “compact” list. If you want a “loose” list, in which
each item is formatted as a paragraph, put spaces between the items:

#+BEGIN_EXAMPLE
    * one

    * two

    * three
#+END_EXAMPLE

-  one

-  two

-  three

The bullets need not be flush with the left margin; they may be indented
one, two, or three spaces. The bullet must be followed by whitespace.

List items look best if subsequent lines are flush with the first line
(after the bullet):

#+BEGIN_EXAMPLE
    * here is my first
      list item.
    * and my second.    
#+END_EXAMPLE

-  here is my first list item.
-  and my second.

But markdown also allows a “lazy” format:

#+BEGIN_EXAMPLE
    * here is my first
    list item.
    * and my second.
#+END_EXAMPLE

-  here is my first list item.
-  and my second.

**** The four-space rule
     :PROPERTIES:
     :CUSTOM_ID: the-four-space-rule
     :END:

A list item may contain multiple paragraphs and other block-level
content. However, subsequent paragraphs must be preceded by a blank line
and indented four spaces or a tab. The list will look better if the
first paragraph is aligned with the rest:

#+BEGIN_EXAMPLE
          * First paragraph.

            Continued.

          * Second paragraph. With a code block, which must be indented
            eight spaces:

               { code }
#+END_EXAMPLE

-  First paragraph.

   Continued.

-  Second paragraph. With a code block, which must be indented eight
   spaces:

   #+BEGIN_EXAMPLE
       { code }
   #+END_EXAMPLE

List items may include other lists. In this case the preceding blank
line is optional. The nested list must be indented four spaces or one
tab:

#+BEGIN_EXAMPLE
    * fruits
         + apples
              - macintosh
              - red delicious
         + pears
         + peaches
    * vegetables
         + broccoli
         + chard
        
#+END_EXAMPLE

-  fruits

   -  apples

      -  macintosh
      -  red delicious

   -  pears
   -  peaches

-  vegetables

   -  broccoli
   -  chard

As noted above, markdown allows you to write list items “lazily,”
instead of indenting continuation lines. However, if there are multiple
paragraphs or other blocks in a list item, the first line of each must
be indented.

#+BEGIN_EXAMPLE
    + A lazy, lazy, list
    item.

    + Another one; this looks
    bad but is legal.

         Second paragraph of second
    list item.
#+END_EXAMPLE

-  A lazy, lazy, list item.

-  Another one; this looks bad but is legal.

   Second paragraph of second list item.

*** Ordered lists
    :PROPERTIES:
    :CUSTOM_ID: ordered-lists
    :END:

Ordered lists work just like bulleted lists, except that the items begin
with enumerators rather than bullets.

In standard markdown, enumerators are decimal numbers followed by a
period and a space. The numbers themselves are ignored, so there is no
difference between this list:

#+BEGIN_EXAMPLE
    1.  one
    2.  two
    3.  three
#+END_EXAMPLE

1. one
2. two
3. three

and this one:

#+BEGIN_EXAMPLE
    5.  one
    7.  two
    1.  three
#+END_EXAMPLE

5. one
6. two
7. three

*** Extension: startnum
    :PROPERTIES:
    :CUSTOM_ID: extension-startnum
    :END:

Pandoc also pays attention to the type of list marker used, and to the
starting number, and both of these are preserved where possible in the
output format. Thus, the following yields a list with numbers followed
by a single parenthesis, starting with 9, and a sublist with lowercase
roman numerals:

#+BEGIN_EXAMPLE
    9)  Ninth
    10)  Tenth
    11)  Eleventh
             i. subone
            ii. subtwo
          iii. subthree
#+END_EXAMPLE

9)  Ninth
10) Tenth
11) Eleventh

    1. subone
    2. subtwo
    3. subthree

Pandoc will start a new list each time a different type of list marker
is used. So, the following will create three lists:

#+BEGIN_EXAMPLE
    (2) Two
    (5) Three
    1.  Four
    *   Five
#+END_EXAMPLE

2) Two
3) Three

1. Four

-  Five

If default list markers are desired, use #.:

#+BEGIN_EXAMPLE
    #.  one
    #.  two
    #.  three
#+END_EXAMPLE

1. one
2. two
3. three

*** Definition lists
    :PROPERTIES:
    :CUSTOM_ID: definition-lists
    :END:

Pandoc supports definition lists, using the syntax of PHP Markdown Extra
with some extensions.

#+BEGIN_EXAMPLE
    Term 1

    :   Definition 1

    Term 2 with *inline markup*

    :   Definition 2

              { some code, part of Definition 2 }

         Third paragraph of definition 2.
#+END_EXAMPLE

-  Term 1 :: Definition 1

-  Term 2 with /inline markup/ :: Definition 2

   #+BEGIN_EXAMPLE
       { some code, part of Definition 2 }
   #+END_EXAMPLE

   Third paragraph of definition 2.

Each term must fit on one line, which may optionally be followed by a
blank line, and must be followed by one or more definitions. A
definition begins with a colon or tilde, which may be indented one or
two spaces.

A term may have multiple definitions, and each definition may consist of
one or more block elements (paragraph, code block, list, etc.), each
indented four spaces or one tab stop. The body of the definition
(including the first line, aside from the colon or tilde) should be
indented four spaces. However, as with other markdown lists, you can
“lazily” omit indentation except at the beginning of a paragraph or
other block element:

#+BEGIN_EXAMPLE
    Term 1

    :   Definition
    with lazy continuation.

         Second paragraph of the definition.
#+END_EXAMPLE

-  Term 1 :: Definition with lazy continuation.

   Second paragraph of the definition.

If you leave space before the definition (as in the example above), the
text of the definition will be treated as a paragraph. In some output
formats, this will mean greater spacing between term/definition pairs.
For a more compact definition list, omit the space before the
definition:

#+BEGIN_EXAMPLE
    Term 1
      ~ Definition 1

    Term 2
      ~ Definition 2a
      ~ Definition 2b
#+END_EXAMPLE

-  Term 1 :: Definition 1
-  Term 2 :: Definition 2a
   Definition 2b

*** Ending a list
    :PROPERTIES:
    :CUSTOM_ID: ending-a-list
    :END:

What if you want to put an indented code block after a list?

#+BEGIN_EXAMPLE
    -   item one
    -   item two

         { my code block }
#+END_EXAMPLE

-  item one
-  item two

   { my code block }

Trouble! Here pandoc (like other markdown implementations) will treat {
my code block } as the second paragraph of item two, and not as a code
block.

To “cut off” the list after item two, you can insert some non-indented
content, like an HTML comment, which won't produce visible output in any
format:

#+BEGIN_EXAMPLE
    -   item one
    -   item two

    <!-- end of list -->

         { my code block }
#+END_EXAMPLE

-  item one
-  item two

#+BEGIN_HTML
  <!-- end of list -->
#+END_HTML

#+BEGIN_EXAMPLE
    { my code block }
#+END_EXAMPLE

You can use the same trick if you want two consecutive lists instead of
one big list:

#+BEGIN_EXAMPLE
    1.  one
    2.  two
    3.  three

    <!-- -->

    1.  uno
    2.  dos
    3.  tres
#+END_EXAMPLE

1. one
2. two
3. three

#+BEGIN_HTML
  <!-- -->
#+END_HTML

1. uno
2. dos
3. tres

*** Horizontal rules
    :PROPERTIES:
    :CUSTOM_ID: horizontal-rules
    :END:

A line containing a row of three or more -, or \_ characters (optionally
separated by spaces) produces a horizontal rule:

#+BEGIN_EXAMPLE
    ---------------
#+END_EXAMPLE

--------------

*** Emphasis
    :PROPERTIES:
    :CUSTOM_ID: emphasis
    :END:

To emphasize some text, surround it with *s or \_, like this:

#+BEGIN_EXAMPLE
    This text is _emphasized with underscores_, and this
    is *emphasized with asterisks*.
#+END_EXAMPLE

This text is /emphasized with underscores/, and this is /emphasized with
asterisks/.

Double * or \_ produces strong emphasis:

#+BEGIN_EXAMPLE
    This is **strong emphasis** and __with underscores__.
#+END_EXAMPLE

This is *strong emphasis* and *with underscores*.

*** Links
    :PROPERTIES:
    :CUSTOM_ID: links
    :END:

Markdown allows links to be specified in several ways.

**** Automatic links
     :PROPERTIES:
     :CUSTOM_ID: automatic-links
     :END:

If you enclose a URL or email address in pointy brackets, it will become
a link:

#+BEGIN_EXAMPLE
    <http://google.com>
#+END_EXAMPLE

[[http://google.com]]

**** Inline links
     :PROPERTIES:
     :CUSTOM_ID: inline-links
     :END:

An inline link consists of the link text in square brackets, followed by
the URL in parentheses. (Optionally, the URL can be followed by a link
title, in quotes.)

#+BEGIN_EXAMPLE
    This is an [inline link](/url), and here's [one with
    a title](http://fsf.org "click here for a good time!").
#+END_EXAMPLE

This is an [[/url][inline link]], and here's [[http://fsf.org][one with
a title]].

There can be no space between the bracketed part and the parenthesized
part. The link text can contain formatting (such as emphasis), but the
title cannot.

*** Page links
    :PROPERTIES:
    :CUSTOM_ID: page-links
    :END:

#+BEGIN_EXAMPLE
    [Networks](/networks/index)
#+END_EXAMPLE

[[/networks/index][Networks]]

*** Images
    :PROPERTIES:
    :CUSTOM_ID: images
    :END:

A link immediately preceded by a ! will be treated as an image. The link
text will be used as the image's alt text:

#+BEGIN_EXAMPLE
    ![alt text](http://mediablends.org.uk/uploads/barryandpatricia.png)
#+END_EXAMPLE

#+CAPTION: alt text

[[http://mediablends.org.uk/uploads/barryandpatricia.png]]
**** Extension: implicit\_figures
     :PROPERTIES:
     :CUSTOM_ID: extension-implicit_figures
     :END:

An image occurring by itself in a paragraph will be rendered as a figure
with a caption. (In LaTeX, a figure environment will be used; in HTML,
the image will be placed in a div with class figure, together with a
caption in a p with class caption.) The image's alt text will be used as
the caption.

#+BEGIN_EXAMPLE
    ![alt text](http://mediablends.org.uk/uploads/barryandpatricia.png)
#+END_EXAMPLE

#+CAPTION: alt text

[[http://mediablends.org.uk/uploads/barryandpatricia.png]]
If you just want a regular inline image, just make sure it is not the
only thing in the paragraph. One way to do this is to insert a
nonbreaking space after the image:

#+BEGIN_EXAMPLE
    ![alt text](http://mediablends.org.uk/uploads/barryandpatricia.png)\
#+END_EXAMPLE

[[http://mediablends.org.uk/uploads/barryandpatricia.png]]\\
